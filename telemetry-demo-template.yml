apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: telemetry-demo
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    generation: 2
    labels:
      app: msa1
    name: msa1
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: msa2
    name: msa2
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: msa3
    name: msa3
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: msa1
    name: msa1
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: msa1:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: non-misbehaving
        uri: https://github.com/corpbob/egress-demo.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:10
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secret: 3c8846c7e10c09e5
      type: Generic
    - github:
        secret: 2b1eb9999374b844
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: msa2
    name: msa2
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: msa2:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: non-misbehaving
        uri: https://github.com/corpbob/egress-demo.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:10
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secret: 3c8846c7e10c09e5
      type: Generic
    - github:
        secret: 2b1eb9999374b844
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: msa3
    name: msa3
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: msa3:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: v2-01
        uri: https://github.com/corpbob/egress-demo.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:10
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secret: 3c8846c7e10c09e5
      type: Generic
    - github:
        secret: 2b1eb9999374b844
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: msa1
    name: msa1
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: msa1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: msa2
    name: msa2
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: msa2
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: msa3
    name: msa3
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: msa3
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: msa1
    name: msa1
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: msa1
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/status: '{"version":"b83fa303cbac0223b03f9fc5fbded767303ad2f7992390bfda6b9be66d960332","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"],"imagePullSecrets":null}'
        creationTimestamp: null
        labels:
          app: msa1
          deploymentconfig: msa1
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: FORTUNE_COMMAND
            value: 'curl -v -H ''x-api-version: v2'' ''http://msa3:8080/fortune?misbehave=false&percent=50''
              && curl -v ''http://msa2:8080/fortune'''
          image: docker-registry.default.svc:5000/${NAMESPACE}/msa1
          imagePullPolicy: Always
          name: msa1
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 100m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --configPath
          - /etc/istio/proxy
          - --binaryPath
          - /usr/local/bin/envoy
          - --serviceCluster
          - msa1.$(POD_NAMESPACE)
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --discoveryAddress
          - istio-pilot.istio-system:15010
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --connectTimeout
          - 10s
          - --proxyAdminPort
          - "15000"
          - --concurrency
          - "2"
          - --controlPlaneAuthPolicy
          - NONE
          - --statusPort
          - "15020"
          - --applicationPorts
          - "8080"
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_METAJSON_LABELS
            value: |
              {"app":"msa1","deploymentconfig":"msa1"}
          image: docker.io/istio/proxyv2:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/certs/
            name: istio-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - "8080"
          - -d
          - "15020"
          image: docker.io/istio/proxy_init:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-init
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.default
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - msa1
        from:
          kind: ImageStreamTag
          name: msa1:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: msa2
    name: msa2
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: msa2
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/status: '{"version":"b83fa303cbac0223b03f9fc5fbded767303ad2f7992390bfda6b9be66d960332","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"],"imagePullSecrets":null}'
        creationTimestamp: null
        labels:
          app: msa2
          deploymentconfig: msa2
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: FORTUNE_COMMAND
            value: echo 'hello from msa2'
          image: docker-registry.default.svc:5000/${NAMESPACE}/msa2
          imagePullPolicy: Always
          name: msa2
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --configPath
          - /etc/istio/proxy
          - --binaryPath
          - /usr/local/bin/envoy
          - --serviceCluster
          - msa2.$(POD_NAMESPACE)
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --discoveryAddress
          - istio-pilot.istio-system:15010
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --connectTimeout
          - 10s
          - --proxyAdminPort
          - "15000"
          - --concurrency
          - "2"
          - --controlPlaneAuthPolicy
          - NONE
          - --statusPort
          - "15020"
          - --applicationPorts
          - "8080"
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_METAJSON_LABELS
            value: |
              {"app":"msa2","deploymentconfig":"msa2"}
          image: docker.io/istio/proxyv2:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/certs/
            name: istio-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - "8080"
          - -d
          - "15020"
          image: docker.io/istio/proxy_init:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-init
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.default
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - msa2
        from:
          kind: ImageStreamTag
          name: msa2:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: msa3
      version: v1
    name: msa3-v1
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: msa3
      version: v1
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/status: '{"version":"b83fa303cbac0223b03f9fc5fbded767303ad2f7992390bfda6b9be66d960332","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"],"imagePullSecrets":null}'
        creationTimestamp: null
        labels:
          app: msa3
          deploymentconfig: msa3
          version: v1
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: FORTUNE_COMMAND
            value: echo 'hello from msa3 version 1'
          image: docker-registry.default.svc:5000/${NAMESPACE}/msa3
          imagePullPolicy: Always
          name: msa3
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --configPath
          - /etc/istio/proxy
          - --binaryPath
          - /usr/local/bin/envoy
          - --serviceCluster
          - msa3.$(POD_NAMESPACE)
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --discoveryAddress
          - istio-pilot.istio-system:15010
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --connectTimeout
          - 10s
          - --proxyAdminPort
          - "15000"
          - --concurrency
          - "2"
          - --controlPlaneAuthPolicy
          - NONE
          - --statusPort
          - "15020"
          - --applicationPorts
          - "8080"
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_METAJSON_LABELS
            value: |
              {"app":"msa3","deploymentconfig":"msa3"}
          image: docker.io/istio/proxyv2:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/certs/
            name: istio-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - "8080"
          - -d
          - "15020"
          image: docker.io/istio/proxy_init:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-init
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.default
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - msa3
        from:
          kind: ImageStreamTag
          name: msa1:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: msa3
      version: v2
    name: msa3-v2
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: msa3
      deploymentconfig: msa3
      version: v2
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/status: '{"version":"b83fa303cbac0223b03f9fc5fbded767303ad2f7992390bfda6b9be66d960332","initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"],"imagePullSecrets":null}'
        creationTimestamp: null
        labels:
          app: msa3
          deploymentconfig: msa3
          version: v2
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: FORTUNE_COMMAND
            value: echo 'hello from msa3 version 2'
          image: docker-registry.default.svc:5000/${NAMESPACE}/msa3
          imagePullPolicy: Always
          name: msa3
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - proxy
          - sidecar
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --configPath
          - /etc/istio/proxy
          - --binaryPath
          - /usr/local/bin/envoy
          - --serviceCluster
          - msa3.$(POD_NAMESPACE)
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --discoveryAddress
          - istio-pilot.istio-system:15010
          - --zipkinAddress
          - zipkin.istio-system:9411
          - --connectTimeout
          - 10s
          - --proxyAdminPort
          - "15000"
          - --concurrency
          - "2"
          - --controlPlaneAuthPolicy
          - NONE
          - --statusPort
          - "15020"
          - --applicationPorts
          - "8080"
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ISTIO_META_INTERCEPTION_MODE
            value: REDIRECT
          - name: ISTIO_METAJSON_LABELS
            value: |
              {"app":"msa3","deploymentconfig":"msa3"}
          image: docker.io/istio/proxyv2:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/istio/proxy
            name: istio-envoy
          - mountPath: /etc/certs/
            name: istio-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -p
          - "15001"
          - -u
          - "1337"
          - -m
          - REDIRECT
          - -i
          - '*'
          - -x
          - ""
          - -b
          - "8080"
          - -d
          - "15020"
          image: docker.io/istio/proxy_init:1.1.1
          imagePullPolicy: IfNotPresent
          name: istio-init
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.default
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - msa3
        from:
          kind: ImageStreamTag
          name: msa3:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The Project Name
  displayName: Namespace
  name: NAMESPACE
  required: true
  value: telemetry-demo
